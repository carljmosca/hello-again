# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI Docker image with Maven
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: main
    - name: docker login for aws
      uses: docker/login-action@v1
      with:
        registry: public.ecr.aws
        username: ${{ secrets.AWS_ACCESS_KEY_ID }}
        password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    # - name: docker login for github
    #   uses: docker/login-action@v1
    #   with:
    #     registry: ghcr.io
    #     username: carljmosca
    #     password: ${{ secrets.CR_PAT }}    
    - name: Configure git
      run: |
        git config --global committer.email "noreply@github.com"
        git config --global committer.name "GitHub"
        git config --global author.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git config --global author.name "${GITHUB_ACTOR}"
    - name: Checkout main branch
      run: git checkout main
    - name: build
      run: mvn package -Pnative -Dquarkus.native.container-build=true -Dquarkus.container-image.push=true
      # env:
      #   UNAMENU_GOOGLE_API_KEY: ${{ secrets.UNAMENU_GOOGLE_API_KEY }}
      #   UNAMENU_TEST_SPREADSHEET_ID: ${{ secrets.UNAMENU_TEST_SPREADSHEET_ID }}
      #   UNAMENU_SOURCE_SPREADSHEET_ID: ${{ secrets.UNAMENU_SOURCE_SPREADSHEET_ID }}
